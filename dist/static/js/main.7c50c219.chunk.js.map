{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/auth/ProtectedRoute.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js","store/actions/authActions.js"],"names":["connect","state","profile","firebase","dispatch","signout","signOut","props","className","to","onClick","initials","SignedOutLinks","auth","links","uid","compose","notifications","firestore","ordered","firestoreConnect","collection","limit","orderBy","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","console","log","ownProps","match","params","data","authorFirstName","authorlastName","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","type","onChange","creds","SignUp","firstName","lastName","signUp_","authError","newUser","signUp","CreateProject","createProject","history","push","getState","getFirebase","getFirestore","authorId","add","Date","then","catch","err","component","rest","path","render","pathname","from","location","App","exact","ProjectDetails","Boolean","window","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports","credentials","signInWithEmailAndPassword","createUserWithEmailAndPassword","response","doc","set"],"mappings":"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","file":"static/js/main.7c50c219.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\nconst SignedInLinks = (props) => {\r\n    const { profile } = props;\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/createproject\">New project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a to=\"/\" onClick={props.signout}>Log out</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signout: () => dispatch(signOut())\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nconst SignedOutLinks = () =>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/signup\">Sign Up</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signin\">Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props) =>{\r\n    const {auth} = props;\r\n    const links = auth.uid ? <SignedInLinks/> : <SignedOutLinks/>;\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">\r\n                    Dahsboard\r\n                </Link>\r\n               {\r\n                   links\r\n               }\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from \"redux\";\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n\r\n    const {notifications} = props;\r\n\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {\r\n                            notifications && notifications.map((notification) => {\r\n                                return (\r\n                                    <li key={notification.id}>\r\n                                        <span className=\"pink-text\">\r\n                                            {notification.user}\r\n                                        </span>\r\n                                        <span>\r\n                                            {notification.content}\r\n                                        </span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {moment(notification.time.toDate()).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notifications: state.firestore.ordered.notifications,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection: 'notifications', limit: 3, orderBy:['time', 'desc']\r\n    }])\r\n)(Notifications);","import React from \"react\";\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">\r\n                    Project - {project.title}\r\n                </span>\r\n                <p>\r\n                    {project.content}\r\n                </p>\r\n                <p className=\"grey-text\">\r\n                    {moment(project.createdAt.toDate().toString()).calendar()}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return (\r\n                        <Link to={'/project/'+project.id} key={project.id}>\r\n                            <ProjectSummary project={project} key={project.id} />\r\n                        </Link>\r\n\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const {projects} = this.props;\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection: 'projects', orderBy:['createdAt', 'desc']\r\n    }])\r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project } = props;\r\n    if (project) {\r\n        return (<div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        {project.title}\r\n                    </span>\r\n                    <p>\r\n                        {project.content}\r\n                    </p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <p> Posted By {project.authorFirstName} {project.authorlastName}</p>\r\n                    <p> {moment(project.createdAt.toDate().toString()).calendar()} </p>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    } else {\r\n        return (\r\n            <p>\r\n                Loading Project.....\r\n            </p>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gre-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapToStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapToDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapToStateToProps, mapToDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport { signUp } from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp_(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gre-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {\r\n                                authError ? <p>{ authError }</p> : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapToDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp_: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapToDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title:'',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n       this.setState({\r\n           [e.target.id]: e.target.value\r\n       })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gre-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Project Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn green lighten-1 z-depth-0\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorlastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT',\r\n                project\r\n            });\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                err\r\n            });\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const { auth, path } = rest;\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (!auth.uid) {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/signin\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n                }\r\n                else {\r\n                    return <Component {...props} />\r\n                }\r\n\r\n            }\r\n        } />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProtectedRoute);","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport ProtectedRoute from './components/auth/ProtectedRoute';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n         <Navbar></Navbar>\n         <Switch>\n           <ProtectedRoute exact path=\"/\" component={Dashboard}/>\n           <ProtectedRoute path=\"/project/:id\" component={ProjectDetails}/>\n           <Route path=\"/signin\" component={SignIn}/>\n           <Route path=\"/signup\" component={SignUp}/>\n           <ProtectedRoute path=\"/createproject\" component={CreateProject}/>\n         </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('LOGIN ERROR ');\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed'\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('LOGIN SUCCESS ');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('SIGN OUT SUCCESS ');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_ERROR':\r\n      console.log('SIGN OUT ERROR ');\r\n      return {\r\n        ...state,\r\n        authError: 'Sign out failed'\r\n      };\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('SIGN UP SUCCESS ');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      console.log('SIGN UP ERROR ', action.err.message);\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n    { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('PROJECT CREATED', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('PROJECT CREATION ERROR ', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDRF695hcANVKgOweHdF2P8Srekj-tmxxc\",\r\n    authDomain: \"webscrapper-sls.firebaseapp.com\",\r\n    databaseURL: \"https://webscrapper-sls.firebaseio.com\",\r\n    projectId: \"webscrapper-sls\",\r\n    storageBucket: \"webscrapper-sls.appspot.com\",\r\n    messagingSenderId: \"926832182736\",\r\n    appId: \"1:926832182736:web:64b5a5f0fbaa8b9482e5d5\",\r\n    measurementId: \"G-JDMNRB84MB\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }), // redux binding for firebase\n    reduxFirestore(fbConfig)\n  )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n\n  serviceWorker.unregister();\n})\n\n","const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({\r\n                type: 'LOGIN_SUCCESS'\r\n            })\r\n        }).catch((err) =>{\r\n            dispatch({\r\n                type: 'LOGIN_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nconst signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();  \r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({\r\n                type: 'SIGNOUT_SUCCESS'\r\n            })\r\n        }).catch((err) =>{\r\n            dispatch({\r\n                type: 'SIGNOUT_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nconst signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response)=>{\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({\r\n                type: 'SIGNUP_SUCCESS'\r\n            })\r\n        }).catch((err) =>{\r\n            dispatch({\r\n                type: 'SIGNUP_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    signIn,\r\n    signOut,\r\n    signUp\r\n}"],"sourceRoot":""}